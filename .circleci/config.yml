version: 2.1

jobs:
  test:
    docker:
      - image: cimg/openjdk:11.0
    working_directory: ~/repo

    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle.kts" }}
            - v1-dependencies-

      - run: ./gradlew dependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle.kts" }}

      - run:
          name: Test whole app
          command: ./gradlew test

  build-deploy:
    parameters:
      envs:
        description: project environments
        default: "ecsb-moving"
        type: string
    docker:
      - image: cimg/openjdk:11.0
    working_directory: ~/repo

    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle.kts" }}
            - v1-dependencies-

      - run:
          name: Create jars for all projects
          command: |
            printf "Creating Jars for projects in backend\n"
            mkdir /tmp/build-jars
            for i in <<parameters.envs>>; do
              echo "build: $i"
              echo "$i:buildFatJar"
              ./gradlew clean && ./gradlew $i:buildFatJar
              cp ./$i/build/libs/$i-all.jar /tmp/build-jars/
            done
      - add_ssh_keys
      - run:
          name: scp to prod
          command: |
            echo "Start scp to prod"
            ssh-keyscan -H ${PROD_HOST} >> ~/.ssh/known_hosts
            for i in <<parameters.envs>>; do
              echo "build: $i"
              echo "$i:buildFatJar"
              scp -r /tmp/build-jars/ ${PROD_USER}@${PROD_HOST}:/home/${PROD_USER}/
            done
workflows:
  only-test:
    jobs:
      - test
    when:
      not:
        equal: [master, << pipeline.git.branch >>]
  build-test-deploy:
    jobs:
      - test
      - build-deploy:
          matrix:
            parameters:
              envs: ['ecsb-moving', "ecsb-chat", "ecsb-game-init", "ecsb-game-engine", "ecsb-anal"]
          requires:
            - test
    when:
        equal: [master, << pipeline.git.branch >>]
